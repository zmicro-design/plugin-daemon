#!/bin/bash

daemon_get_service_name() {
  local name=$1
  if [ "$name" = "" ]; then
    log::error "name is required"
    exit 1
  fi

  if [ "$(os::is_macos)" = "true" ]; then
    echo "com.zcorky.zmicro.${name}"
    return
  fi

  echo "zmicro_${name}"
}

daemon_parse_service_name() {
  local service_name=$1
  if [ "$service_name" = "" ]; then
    log::error "[daemon_parse_service_name] service_name is required"
    exit 1
  fi

  local remove_dot_service=$(string::remove $service_name $DEAMON_SUFFIX)
  local remove_prefix=$(string::remove $remove_dot_service $DAEMON_PREFIX)

  echo $remove_prefix
}

daemon_service::get_path() {
  local name=$1
  if [ "$name" = "" ]; then
    log::error "name is required"
    exit 1
  fi

  local service=$(daemon_get_service_name $1)
  if [ "$(os::is_macos)" = "true" ]; then
    # echo "/System/Library/LaunchDaemons/${service}.plist"
    echo "${DAEMON_SERVICE_DIR}/${service}.plist"
    return
  fi

  echo "/etc/systemd/system/${service}.service"
}

daemon_get_service_log_path() {
  local name=$1
  if [ "$name" = "" ]; then
    log::error "name is required"
    exit 1
  fi

  # local service=$(daemon_get_service_name $name)
  echo "$DAEMON_SERVICE_LOG_DIR/$name.log"
}

daemon_is_service_exist() {
  local name=$1
  if [ "$name" = "" ]; then
    log::error "[daemon_is_service_exist] name is required"
    exit 1
  fi

  local service_path=$(daemon_service::get_path $name)
  if [ ! -f $service_path ]; then
    echo "false"
  else
    echo "true"
  fi
}

daemon_is_service() {
  # zmicro_vscode_protect.service
  local service_name=$1
  if [ "$service_name" = "" ]; then
    log::error "[daemon_is_service] service_name is required"
    exit 1
  fi

  echo "$(string::match $service_name ^${DAEMON_PREFIX})"
}

daemon_has_service() {
  daemon_is_service_exist $@
}

export -f daemon_get_service_name
export -f daemon_parse_service_name
export -f daemon_service::get_path
export -f daemon_get_service_log_path
export -f daemon_is_service_exist
export -f daemon_has_service
export -f daemon_is_service
